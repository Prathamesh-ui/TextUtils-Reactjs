{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","navbar","to","title","about","placeholder","btncolor","onClick","toogleMode","htmlFor","textbtn","nightMode","nightbtn","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","disabled","length","upperText","toUpperCase","showAlert","lowerText","toLowerCase","titleCase","split","i","charAt","slice","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newtext","tnew","j","filter","element","defaultProps","Alert","height","alert","role","App","setmode","settextbtn","setalert","night","setnight","setnightbtn","setnavbar","setbtncolor","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9270bbc8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react/cjs/react.development'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setmyStyle] = useState({\r\n    //     color: \"black\",\r\n    //     backgroundColor: \"white\"\r\n    // })\r\n\r\n    let myStyle = {\r\n        color: props.mode==='light'?'black':'white',\r\n        backgroundColor: props.mode === 'light'?'white':'#212529'\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h1 className=\"my-3\">About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                            <strong>Accordion Item #1</strong> \r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                        <strong>Accordion Item #2</strong> \r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                        <strong>Accordion Item #3</strong> \r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.navbar} bg-${props.navbar}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n          <div className={`form-check form-switch text-${props.btncolor} mx-3`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toogleMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.textbtn}</label>\r\n          </div>\r\n          <div className={`form-check form-switch text-${props.btncolor} mx-3`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.nightMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.nightbtn}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title\",\r\n  about: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        let upperText = text.toUpperCase();\r\n        setText(upperText);\r\n        props.showAlert(\"Converted to Uppercase!\");\r\n    }\r\n    const handleLowClick = () =>{\r\n        let lowerText = text.toLowerCase();\r\n        setText(lowerText)\r\n        props.showAlert(\"Converted to Lowercase!\");\r\n    }\r\n    const handleClearClick = () =>{\r\n        let lowerText = '';\r\n        setText(lowerText)\r\n        props.showAlert(\"Text Cleared!\");\r\n    }\r\n    const handleTitleClick = () =>{\r\n        let titleCase = text.toLowerCase().split(' ');\r\n        for (var i = 0; i< titleCase.length; i++){\r\n            titleCase[i] = titleCase[i].charAt(0).toUpperCase()+titleCase[i].slice(1);\r\n        }\r\n        setText(titleCase.join(' '));\r\n        props.showAlert(\"Converted to Titlecase!\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        let text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied to Clipboard!\");\r\n        document.getSelection().removeAllRanges();\r\n    }\r\n\r\n    const handleTrim = () =>{        \r\n        let newtext = text.split(\" \");\r\n        let tnew = [];\r\n        var j=0;\r\n        for(var i=0; i<newtext.length; i++){\r\n            if (newtext[i] !== ''){\r\n                tnew[j] = newtext[i];\r\n                j++;\r\n            }\r\n        }\r\n        // setText(text.replace(/\\s+/g, \" \"));\r\n        setText(tnew.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\");\r\n\r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n        \r\n    return (\r\n    <>\r\n        <div className=\"container\" style = {{color: props.mode ==='light'?'black':'white'}}>\r\n            <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\"><h1>{props.heading}</h1></label>\r\n            <div className='mb-3'>\r\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'#212529', color: props.mode ==='light'?'black':'white'}}></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3 m-3\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3\" onClick={handleTitleClick}>Convert to Titlecase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-3\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3 mxr-3\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-3\" onClick={handleTrim}>Remove Extra Space</button>\r\n        </div>\r\n        <div className=\"container my-3\" style = {{color: props.mode ==='light'?'black':'white'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(' ').filter((element)=>{return element.length !== 0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * (text.split(' ').filter((element)=>{return element.length !== 0}).length)} Minutes required to Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:'Enter some text in textbox to preview'}</p>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert}</strong>\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [textbtn, settextbtn] = useState(\"Enable Dark mode\");\n  const [alert, setalert] = useState(null);\n  const [night, setnight] = useState('light');\n  const [nightbtn, setnightbtn] = useState(\"Enable Night mode\");\n  const [navbar, setnavbar] = useState('light');\n  const [btncolor, setbtncolor] = useState('dark');\n\n  const showAlert = (message) =>{\n    setalert(message);\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  const toogleMode = () =>{\n    if(mode === 'light'){\n      setmode('dark');\n      settextbtn('Enable Light Mode');\n      document.body.style.backgroundColor = '#042735';\n      showAlert(\"Dark Mode has been Enabled\");\n      setnavbar('dark');\n      setbtncolor('light');\n    }\n    else{\n      setmode('light');\n      settextbtn('Enable Dark mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been Enabled\");\n      setnavbar('light');\n      setbtncolor('dark');\n\n    }\n    \n  }\n\n  const nightMode = () =>{\n    if(night === 'light'){\n      setnight('dark');\n      setnightbtn('Enable Light Mode');\n      document.body.style.backgroundColor = '#e9b80bb3';\n      showAlert(\"Night Mode has been Enabled\");\n      setnavbar('light');\n      setbtncolor('danger');\n    }\n    else{\n      setnight('light');\n      setnightbtn('Enable Night mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been Enabled\");\n      setnavbar('light');\n      setbtncolor('dark');\n    }\n  }\n\n  return (\n    <>\n    <Router>\n      <Navbar title = \"TextUtils\" mode = {mode} toogleMode = {toogleMode} textbtn = {textbtn} nightMode = {nightMode} nightbtn={nightbtn} night = {night} navbar = {navbar} btncolor = {btncolor}/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About mode = {mode}/>\n          </Route>\n          <Route exact path=\"/\">\n        <TextForm heading = 'Enter the text: ' mode={mode} showAlert={showAlert}/>\n          </Route>\n      </Switch>\n      </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}